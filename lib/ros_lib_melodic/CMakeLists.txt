# This file was automagically generated by mbed.org.
# If you would like to add your own targets, create a
# project.cmake file locally in your project directory.

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)
SET(CMAKE_SYSTEM_NAME Generic)
#SET(CMAKE_SYSTEM_PROCESSOR arm)
SET(CMAKE_CROSSCOMPILING TRUE)

# force compiler settings
SET(CMAKE_C_COMPILER_WORKS TRUE)
SET(CMAKE_CXX_COMPILER_WORKS TRUE)

# force cmake compilers
SET(CMAKE_ASM_COMPILER    "arm-none-eabi-gcc")
SET(CMAKE_C_COMPILER      "arm-none-eabi-gcc")
SET(CMAKE_CXX_COMPILER    "arm-none-eabi-g++")
SET(ELF2BIN               "arm-none-eabi-objcopy")


# if the environment does not specify build type, set to Debug
IF(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Debug"
        CACHE STRING "Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel."
        FORCE)
ENDIF()

# here starts the project
PROJECT(ros_lib_melodic C CXX ASM)

# uncomment below to have a verbose build process
#SET(CMAKE_VERBOSE_MAKEFILE ON)

SET(LD_SYS_LIBS "-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys  -Wl,--end-group")

SET(CMAKE_C_FLAGS "-std=gnu11 -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -Os -g -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m7 -mthumb -mfpu=fpv5-d16 -mfloat-abi=softfp -DMBED_ROM_START=0x8000000 -DMBED_ROM_SIZE=0x200000 -DMBED_RAM_START=0x20000000 -DMBED_RAM_SIZE=0x20000 -DMBED_RAM1_START=0x24000000 -DMBED_RAM1_SIZE=0x80000 -include mbed_config.h")
SET(CMAKE_CXX_FLAGS "-std=gnu++14 -fno-rtti -Wvla -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -Os -g -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m7 -mthumb -mfpu=fpv5-d16 -mfloat-abi=softfp -DMBED_ROM_START=0x8000000 -DMBED_ROM_SIZE=0x200000 -DMBED_RAM_START=0x20000000 -DMBED_RAM_SIZE=0x20000 -DMBED_RAM1_START=0x24000000 -DMBED_RAM1_SIZE=0x80000  -include mbed_config.h")
SET(CMAKE_ASM_FLAGS "-x assembler-with-cpp -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -Os -g -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m7 -mthumb -mfpu=fpv5-d16 -mfloat-abi=softfp  -include mbed_config.h")
SET(CMAKE_CXX_LINK_FLAGS "-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,__malloc_r -Wl,--wrap,__free_r -Wl,--wrap,__realloc_r -Wl,--wrap,__memalign_r -Wl,--wrap,__calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n -mcpu=cortex-m7 -mthumb -mfpu=fpv5-d16 -mfloat-abi=softfp -DMBED_ROM_START=0x8000000 -DMBED_ROM_SIZE=0x200000 -DMBED_RAM_START=0x20000000 -DMBED_RAM_SIZE=0x20000 -DMBED_RAM1_START=0x24000000 -DMBED_RAM1_SIZE=0x80000 -DMBED_BOOT_STACK_SIZE=4096 ")
SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} ${LD_SYS_LIBS} -T ${CMAKE_BINARY_DIR}/ros_lib_melodic_pp.link_script.ld")

ADD_DEFINITIONS(
  -DARM_MATH_CM7
  -DCOMPONENT_NSPE=1
  -DCOMPONENT_PSA_SRV_EMUL=1
  -DCOMPONENT_PSA_SRV_IMPL=1
  -DDEVICE_ANALOGIN=1
  -DDEVICE_ANALOGOUT=1
  -DDEVICE_CAN=1
  -DDEVICE_CRC=1
  -DDEVICE_EMAC=1
  -DDEVICE_FLASH=1
  -DDEVICE_I2C=1
  -DDEVICE_I2CSLAVE=1
  -DDEVICE_I2C_ASYNCH=1
  -DDEVICE_INTERRUPTIN=1
  -DDEVICE_LPTICKER=1
  -DDEVICE_MPU=1
  -DDEVICE_PORTIN=1
  -DDEVICE_PORTINOUT=1
  -DDEVICE_PORTOUT=1
  -DDEVICE_PWMOUT=1
  -DDEVICE_RESET_REASON=1
  -DDEVICE_RTC=1
  -DDEVICE_SERIAL=1
  -DDEVICE_SERIAL_FC=1
  -DDEVICE_SLEEP=1
  -DDEVICE_SPI=1
  -DDEVICE_SPISLAVE=1
  -DDEVICE_SPI_ASYNCH=1
  -DDEVICE_STDIO_MESSAGES=1
  -DDEVICE_TRNG=1
  -DDEVICE_USTICKER=1
  -DDEVICE_WATCHDOG=1
  -DEXTRA_IDLE_STACK_REQUIRED
  -DMBED_BUILD_TIMESTAMP=1575487728.76
  -DMBED_TICKLESS
  -DSTM32H743xx
  -DTARGET_CORTEX
  -DTARGET_CORTEX_M
  -DTARGET_FAMILY_STM32
  -DTARGET_FF_ARDUINO
  -DTARGET_LIKE_CORTEX_M7
  -DTARGET_LIKE_MBED
  -DTARGET_M7
  -DTARGET_NAME=NUCLEO_H743ZI2
  -DTARGET_NUCLEO_H743ZI2
  -DTARGET_RELEASE
  -DTARGET_RTOS_M4_M7
  -DTARGET_STM
  -DTARGET_STM32H7
  -DTARGET_STM32H743xI
  -DTARGET_STM_EMAC
  -DTOOLCHAIN_GCC
  -DTOOLCHAIN_GCC_ARM
  -DTRANSACTION_QUEUE_SIZE_SPI=2
  -DUSE_FULL_LL_DRIVER
  -DUSE_HAL_DRIVER
  -D__CMSIS_RTOS
  -D__CORTEX_M7
  -D__FPU_PRESENT=1
  -D__MBED_CMSIS_RTOS_CM
  -D__MBED__=1
  )
INCLUDE_DIRECTORIES(
  visualization_msgs
  turtlesim
  turtle_actionlib
  trajectory_msgs
  topic_tools
  theora_image_transport
  tf2_msgs
  tf
  stereo_msgs
  std_srvs
  std_msgs
  smach_msgs
  shape_msgs
  sensor_msgs
  rosserial_msgs
  rosserial_mbed
  rosserial_arduino
  rospy_tutorials
  rosgraph_msgs
  roscpp_tutorials
  roscpp
  ros
  polled_camera
  pcl_msgs
  nodelet
  nav_msgs
  map_msgs
  laser_assembler
  geometry_msgs
  gazebo_msgs
  dynamic_reconfigure
  diagnostic_msgs
  controller_manager_msgs
  control_toolbox
  control_msgs
  bond
  actionlib_tutorials
  actionlib_msgs
  actionlib
  /usr/src/mbed-sdk
  
  )

# executable ros_lib_melodic
ADD_EXECUTABLE(ros_lib_melodic
  MbedHardware.h
  actionlib/TestAction.h
  actionlib/TestActionFeedback.h
  actionlib/TestActionGoal.h
  actionlib/TestActionResult.h
  actionlib/TestFeedback.h
  actionlib/TestGoal.h
  actionlib/TestRequestAction.h
  actionlib/TestRequestActionFeedback.h
  actionlib/TestRequestActionGoal.h
  actionlib/TestRequestActionResult.h
  actionlib/TestRequestFeedback.h
  actionlib/TestRequestGoal.h
  actionlib/TestRequestResult.h
  actionlib/TestResult.h
  actionlib/TwoIntsAction.h
  actionlib/TwoIntsActionFeedback.h
  actionlib/TwoIntsActionGoal.h
  actionlib/TwoIntsActionResult.h
  actionlib/TwoIntsFeedback.h
  actionlib/TwoIntsGoal.h
  actionlib/TwoIntsResult.h
  actionlib_msgs/GoalID.h
  actionlib_msgs/GoalStatus.h
  actionlib_msgs/GoalStatusArray.h
  actionlib_tutorials/AveragingAction.h
  actionlib_tutorials/AveragingActionFeedback.h
  actionlib_tutorials/AveragingActionGoal.h
  actionlib_tutorials/AveragingActionResult.h
  actionlib_tutorials/AveragingFeedback.h
  actionlib_tutorials/AveragingGoal.h
  actionlib_tutorials/AveragingResult.h
  actionlib_tutorials/FibonacciAction.h
  actionlib_tutorials/FibonacciActionFeedback.h
  actionlib_tutorials/FibonacciActionGoal.h
  actionlib_tutorials/FibonacciActionResult.h
  actionlib_tutorials/FibonacciFeedback.h
  actionlib_tutorials/FibonacciGoal.h
  actionlib_tutorials/FibonacciResult.h
  bond/Constants.h
  bond/Status.h
  control_msgs/FollowJointTrajectoryAction.h
  control_msgs/FollowJointTrajectoryActionFeedback.h
  control_msgs/FollowJointTrajectoryActionGoal.h
  control_msgs/FollowJointTrajectoryActionResult.h
  control_msgs/FollowJointTrajectoryFeedback.h
  control_msgs/FollowJointTrajectoryGoal.h
  control_msgs/FollowJointTrajectoryResult.h
  control_msgs/GripperCommand.h
  control_msgs/GripperCommandAction.h
  control_msgs/GripperCommandActionFeedback.h
  control_msgs/GripperCommandActionGoal.h
  control_msgs/GripperCommandActionResult.h
  control_msgs/GripperCommandFeedback.h
  control_msgs/GripperCommandGoal.h
  control_msgs/GripperCommandResult.h
  control_msgs/JointControllerState.h
  control_msgs/JointJog.h
  control_msgs/JointTolerance.h
  control_msgs/JointTrajectoryAction.h
  control_msgs/JointTrajectoryActionFeedback.h
  control_msgs/JointTrajectoryActionGoal.h
  control_msgs/JointTrajectoryActionResult.h
  control_msgs/JointTrajectoryControllerState.h
  control_msgs/JointTrajectoryFeedback.h
  control_msgs/JointTrajectoryGoal.h
  control_msgs/JointTrajectoryResult.h
  control_msgs/PidState.h
  control_msgs/PointHeadAction.h
  control_msgs/PointHeadActionFeedback.h
  control_msgs/PointHeadActionGoal.h
  control_msgs/PointHeadActionResult.h
  control_msgs/PointHeadFeedback.h
  control_msgs/PointHeadGoal.h
  control_msgs/PointHeadResult.h
  control_msgs/QueryCalibrationState.h
  control_msgs/QueryTrajectoryState.h
  control_msgs/SingleJointPositionAction.h
  control_msgs/SingleJointPositionActionFeedback.h
  control_msgs/SingleJointPositionActionGoal.h
  control_msgs/SingleJointPositionActionResult.h
  control_msgs/SingleJointPositionFeedback.h
  control_msgs/SingleJointPositionGoal.h
  control_msgs/SingleJointPositionResult.h
  control_toolbox/SetPidGains.h
  controller_manager_msgs/ControllerState.h
  controller_manager_msgs/ControllerStatistics.h
  controller_manager_msgs/ControllersStatistics.h
  controller_manager_msgs/HardwareInterfaceResources.h
  controller_manager_msgs/ListControllerTypes.h
  controller_manager_msgs/ListControllers.h
  controller_manager_msgs/LoadController.h
  controller_manager_msgs/ReloadControllerLibraries.h
  controller_manager_msgs/SwitchController.h
  controller_manager_msgs/UnloadController.h
  diagnostic_msgs/AddDiagnostics.h
  diagnostic_msgs/DiagnosticArray.h
  diagnostic_msgs/DiagnosticStatus.h
  diagnostic_msgs/KeyValue.h
  diagnostic_msgs/SelfTest.h
  duration.cpp
  dynamic_reconfigure/BoolParameter.h
  dynamic_reconfigure/Config.h
  dynamic_reconfigure/ConfigDescription.h
  dynamic_reconfigure/DoubleParameter.h
  dynamic_reconfigure/Group.h
  dynamic_reconfigure/GroupState.h
  dynamic_reconfigure/IntParameter.h
  dynamic_reconfigure/ParamDescription.h
  dynamic_reconfigure/Reconfigure.h
  dynamic_reconfigure/SensorLevels.h
  dynamic_reconfigure/StrParameter.h
  gazebo_msgs/ApplyBodyWrench.h
  gazebo_msgs/ApplyJointEffort.h
  gazebo_msgs/BodyRequest.h
  gazebo_msgs/ContactState.h
  gazebo_msgs/ContactsState.h
  gazebo_msgs/DeleteLight.h
  gazebo_msgs/DeleteModel.h
  gazebo_msgs/GetJointProperties.h
  gazebo_msgs/GetLightProperties.h
  gazebo_msgs/GetLinkProperties.h
  gazebo_msgs/GetLinkState.h
  gazebo_msgs/GetModelProperties.h
  gazebo_msgs/GetModelState.h
  gazebo_msgs/GetPhysicsProperties.h
  gazebo_msgs/GetWorldProperties.h
  gazebo_msgs/JointRequest.h
  gazebo_msgs/LinkState.h
  gazebo_msgs/LinkStates.h
  gazebo_msgs/ModelState.h
  gazebo_msgs/ModelStates.h
  gazebo_msgs/ODEJointProperties.h
  gazebo_msgs/ODEPhysics.h
  gazebo_msgs/SetJointProperties.h
  gazebo_msgs/SetJointTrajectory.h
  gazebo_msgs/SetLightProperties.h
  gazebo_msgs/SetLinkProperties.h
  gazebo_msgs/SetLinkState.h
  gazebo_msgs/SetModelConfiguration.h
  gazebo_msgs/SetModelState.h
  gazebo_msgs/SetPhysicsProperties.h
  gazebo_msgs/SpawnModel.h
  gazebo_msgs/WorldState.h
  geometry_msgs/Accel.h
  geometry_msgs/AccelStamped.h
  geometry_msgs/AccelWithCovariance.h
  geometry_msgs/AccelWithCovarianceStamped.h
  geometry_msgs/Inertia.h
  geometry_msgs/InertiaStamped.h
  geometry_msgs/Point.h
  geometry_msgs/Point32.h
  geometry_msgs/PointStamped.h
  geometry_msgs/Polygon.h
  geometry_msgs/PolygonStamped.h
  geometry_msgs/Pose.h
  geometry_msgs/Pose2D.h
  geometry_msgs/PoseArray.h
  geometry_msgs/PoseStamped.h
  geometry_msgs/PoseWithCovariance.h
  geometry_msgs/PoseWithCovarianceStamped.h
  geometry_msgs/Quaternion.h
  geometry_msgs/QuaternionStamped.h
  geometry_msgs/Transform.h
  geometry_msgs/TransformStamped.h
  geometry_msgs/Twist.h
  geometry_msgs/TwistStamped.h
  geometry_msgs/TwistWithCovariance.h
  geometry_msgs/TwistWithCovarianceStamped.h
  geometry_msgs/Vector3.h
  geometry_msgs/Vector3Stamped.h
  geometry_msgs/Wrench.h
  geometry_msgs/WrenchStamped.h
  laser_assembler/AssembleScans.h
  laser_assembler/AssembleScans2.h
  map_msgs/GetMapROI.h
  map_msgs/GetPointMap.h
  map_msgs/GetPointMapROI.h
  map_msgs/OccupancyGridUpdate.h
  map_msgs/PointCloud2Update.h
  map_msgs/ProjectedMap.h
  map_msgs/ProjectedMapInfo.h
  map_msgs/ProjectedMapsInfo.h
  map_msgs/SaveMap.h
  map_msgs/SetMapProjections.h
  mbed_config.h
  nav_msgs/GetMap.h
  nav_msgs/GetMapAction.h
  nav_msgs/GetMapActionFeedback.h
  nav_msgs/GetMapActionGoal.h
  nav_msgs/GetMapActionResult.h
  nav_msgs/GetMapFeedback.h
  nav_msgs/GetMapGoal.h
  nav_msgs/GetMapResult.h
  nav_msgs/GetPlan.h
  nav_msgs/GridCells.h
  nav_msgs/MapMetaData.h
  nav_msgs/OccupancyGrid.h
  nav_msgs/Odometry.h
  nav_msgs/Path.h
  nav_msgs/SetMap.h
  nodelet/NodeletList.h
  nodelet/NodeletLoad.h
  nodelet/NodeletUnload.h
  pcl_msgs/ModelCoefficients.h
  pcl_msgs/PointIndices.h
  pcl_msgs/PolygonMesh.h
  pcl_msgs/Vertices.h
  polled_camera/GetPolledImage.h
  ros.h
  ros/duration.h
  ros/msg.h
  ros/node_handle.h
  ros/publisher.h
  ros/service_client.h
  ros/service_server.h
  ros/subscriber.h
  ros/time.h
  roscpp/Empty.h
  roscpp/GetLoggers.h
  roscpp/Logger.h
  roscpp/SetLoggerLevel.h
  roscpp_tutorials/TwoInts.h
  rosgraph_msgs/Clock.h
  rosgraph_msgs/Log.h
  rosgraph_msgs/TopicStatistics.h
  rospy_tutorials/AddTwoInts.h
  rospy_tutorials/BadTwoInts.h
  rospy_tutorials/Floats.h
  rospy_tutorials/HeaderString.h
  rosserial_arduino/Adc.h
  rosserial_arduino/Test.h
  rosserial_mbed/Adc.h
  rosserial_mbed/Test.h
  rosserial_msgs/Log.h
  rosserial_msgs/RequestMessageInfo.h
  rosserial_msgs/RequestParam.h
  rosserial_msgs/RequestServiceInfo.h
  rosserial_msgs/TopicInfo.h
  sensor_msgs/BatteryState.h
  sensor_msgs/CameraInfo.h
  sensor_msgs/ChannelFloat32.h
  sensor_msgs/CompressedImage.h
  sensor_msgs/FluidPressure.h
  sensor_msgs/Illuminance.h
  sensor_msgs/Image.h
  sensor_msgs/Imu.h
  sensor_msgs/JointState.h
  sensor_msgs/Joy.h
  sensor_msgs/JoyFeedback.h
  sensor_msgs/JoyFeedbackArray.h
  sensor_msgs/LaserEcho.h
  sensor_msgs/LaserScan.h
  sensor_msgs/MagneticField.h
  sensor_msgs/MultiDOFJointState.h
  sensor_msgs/MultiEchoLaserScan.h
  sensor_msgs/NavSatFix.h
  sensor_msgs/NavSatStatus.h
  sensor_msgs/PointCloud.h
  sensor_msgs/PointCloud2.h
  sensor_msgs/PointField.h
  sensor_msgs/Range.h
  sensor_msgs/RegionOfInterest.h
  sensor_msgs/RelativeHumidity.h
  sensor_msgs/SetCameraInfo.h
  sensor_msgs/Temperature.h
  sensor_msgs/TimeReference.h
  shape_msgs/Mesh.h
  shape_msgs/MeshTriangle.h
  shape_msgs/Plane.h
  shape_msgs/SolidPrimitive.h
  smach_msgs/SmachContainerInitialStatusCmd.h
  smach_msgs/SmachContainerStatus.h
  smach_msgs/SmachContainerStructure.h
  std_msgs/Bool.h
  std_msgs/Byte.h
  std_msgs/ByteMultiArray.h
  std_msgs/Char.h
  std_msgs/ColorRGBA.h
  std_msgs/Duration.h
  std_msgs/Empty.h
  std_msgs/Float32.h
  std_msgs/Float32MultiArray.h
  std_msgs/Float64.h
  std_msgs/Float64MultiArray.h
  std_msgs/Header.h
  std_msgs/Int16.h
  std_msgs/Int16MultiArray.h
  std_msgs/Int32.h
  std_msgs/Int32MultiArray.h
  std_msgs/Int64.h
  std_msgs/Int64MultiArray.h
  std_msgs/Int8.h
  std_msgs/Int8MultiArray.h
  std_msgs/MultiArrayDimension.h
  std_msgs/MultiArrayLayout.h
  std_msgs/String.h
  std_msgs/Time.h
  std_msgs/UInt16.h
  std_msgs/UInt16MultiArray.h
  std_msgs/UInt32.h
  std_msgs/UInt32MultiArray.h
  std_msgs/UInt64.h
  std_msgs/UInt64MultiArray.h
  std_msgs/UInt8.h
  std_msgs/UInt8MultiArray.h
  std_srvs/Empty.h
  std_srvs/SetBool.h
  std_srvs/Trigger.h
  stereo_msgs/DisparityImage.h
  tf/FrameGraph.h
  tf/tf.h
  tf/tfMessage.h
  tf/transform_broadcaster.h
  tf2_msgs/FrameGraph.h
  tf2_msgs/LookupTransformAction.h
  tf2_msgs/LookupTransformActionFeedback.h
  tf2_msgs/LookupTransformActionGoal.h
  tf2_msgs/LookupTransformActionResult.h
  tf2_msgs/LookupTransformFeedback.h
  tf2_msgs/LookupTransformGoal.h
  tf2_msgs/LookupTransformResult.h
  tf2_msgs/TF2Error.h
  tf2_msgs/TFMessage.h
  theora_image_transport/Packet.h
  time.cpp
  topic_tools/DemuxAdd.h
  topic_tools/DemuxDelete.h
  topic_tools/DemuxList.h
  topic_tools/DemuxSelect.h
  topic_tools/MuxAdd.h
  topic_tools/MuxDelete.h
  topic_tools/MuxList.h
  topic_tools/MuxSelect.h
  trajectory_msgs/JointTrajectory.h
  trajectory_msgs/JointTrajectoryPoint.h
  trajectory_msgs/MultiDOFJointTrajectory.h
  trajectory_msgs/MultiDOFJointTrajectoryPoint.h
  turtle_actionlib/ShapeAction.h
  turtle_actionlib/ShapeActionFeedback.h
  turtle_actionlib/ShapeActionGoal.h
  turtle_actionlib/ShapeActionResult.h
  turtle_actionlib/ShapeFeedback.h
  turtle_actionlib/ShapeGoal.h
  turtle_actionlib/ShapeResult.h
  turtle_actionlib/Velocity.h
  turtlesim/Color.h
  turtlesim/Kill.h
  turtlesim/Pose.h
  turtlesim/SetPen.h
  turtlesim/Spawn.h
  turtlesim/TeleportAbsolute.h
  turtlesim/TeleportRelative.h
  visualization_msgs/ImageMarker.h
  visualization_msgs/InteractiveMarker.h
  visualization_msgs/InteractiveMarkerControl.h
  visualization_msgs/InteractiveMarkerFeedback.h
  visualization_msgs/InteractiveMarkerInit.h
  visualization_msgs/InteractiveMarkerPose.h
  visualization_msgs/InteractiveMarkerUpdate.h
  visualization_msgs/Marker.h
  visualization_msgs/MarkerArray.h
  visualization_msgs/MenuEntry.h
  )
SET_TARGET_PROPERTIES(ros_lib_melodic PROPERTIES ENABLE_EXPORTS 1)
# add syslibs dependencies to create the correct linker order
TARGET_LINK_LIBRARIES(ros_lib_melodic -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys)

add_custom_command(TARGET ros_lib_melodic PRE_LINK
                   COMMAND "arm-none-eabi-cpp" -E -P -Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n -mcpu=cortex-m7 -mthumb -mfpu=fpv5-d16 -mfloat-abi=softfp -DMBED_ROM_START=0x8000000 -DMBED_ROM_SIZE=0x200000 -DMBED_RAM_START=0x20000000 -DMBED_RAM_SIZE=0x20000 -DMBED_RAM1_START=0x24000000 -DMBED_RAM1_SIZE=0x80000 -DMBED_BOOT_STACK_SIZE=4096 None -o ${CMAKE_CURRENT_BINARY_DIR}/ros_lib_melodic_pp.link_script.ld
                   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                   BYPRODUCTS "${CMAKE_CURRENT_BINARY_DIR}/ros_lib_melodic_pp.link_script.ld"
                   )

add_custom_command(TARGET ros_lib_melodic POST_BUILD
                   COMMAND ${ELF2BIN} -O ihex $<TARGET_FILE:ros_lib_melodic> $<TARGET_FILE:ros_lib_melodic>.hex
                   COMMAND ${CMAKE_COMMAND} -E echo "-- built: $<TARGET_FILE:ros_lib_melodic>.hex"
                  )




##########################################################################
# mbed-cli specific targets
##########################################################################

# detect the build type and select the corresponding cli profile
SET(MBED_BUILD_PROFILE "")
STRING(TOLOWER ${CMAKE_BUILD_TYPE} LOWERCASE_CMAKE_BUILD_TYPE)
IF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES debug)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/debug.json")
ELSEIF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES relwithdebinfo)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/develop.json")
ELSEIF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES release)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/release.json")
ELSEIF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES minsizerel)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/release.json")
ELSE()
  MESSAGE(WARNING "Build type '${CMAKE_BUILD_TYPE}' is unknown, using debug profile")
  SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/debug.json")
ENDIF()

# optional custom target to build via mbed-cli
ADD_CUSTOM_TARGET(mbed-cli-build
        COMMAND ${CMAKE_COMMAND} -E echo "mbed compile --build BUILD/${CMAKE_BUILD_TYPE} --profile ${MBED_BUILD_PROFILE}"
        COMMAND mbed compile --build BUILD/${CMAKE_BUILD_TYPE} --profile ${MBED_BUILD_PROFILE}
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        SOURCES ${SOURCE_FILES} ${SYS_SOURCE_FILES})

IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/project.cmake)
  INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/project.cmake)
ELSE()
  MESSAGE(STATUS "Add a local project.cmake file to add your own targets.")
ENDIF()

# this will take care of binary directories generated by cmake/clion not to confuse the cli build
FILE(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/.mbedignore" CONTENT "*")